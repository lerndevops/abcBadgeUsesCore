@model ciBadgeFields.ClassFieldAny

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">

        @*<h4>ClassFieldAny</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

        @*<p>
                The following are model members which we might want to reference using Razor...
                ........
                model.IsDisplayedForEdits
                model.FieldLabelCaption
                model.ExampleValue
                model.HasPresetValues
                model.IsAdditionalField
                model.DataEntryText
                ((ClassFieldCustomized)model).ArrayOfValues
                ........
            </p>*@


        @*<div class="form-group">
                @Html.LabelFor(model => model.IsDisplayedForEdits, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDisplayedForEdits)
                        @Html.ValidationMessageFor(model => model.IsDisplayedForEdits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @if (Model.IsDisplayedForEdits)
        {
            @*<div class="form-group">
                    @Html.LabelFor(model => model.FieldLabelCaption, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FieldLabelCaption, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FieldLabelCaption, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            if (Model.IsDateField)
            {
            <div class="form-group">
                @*@Model_Custom.FieldLabelCaption (Date)*@
                @*@Model.FieldLabelCaption (Date Field)*@
                <div class="control-label col-md-2">
                    @Model.FieldLabelCaption
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CurrentRecipValue_Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentRecipValue_Date, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        else if (Model is ciBadgeFields.ClassFieldCustomized Model_Custom)
        {
            //
            // For customized fields.
            //
            if (Model_Custom.HasPresetValues)
            {
                <div class="form-group">
                    @*@Html.LabelFor(model => model.DataEntryText, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @*@Model_Custom.FieldLabelCaption (Preset Values)*@
                    <div class="control-label col-md-2">
                        @Model_Custom.FieldLabelCaption
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CurrentRecipValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentRecipValue, "", new { @class = "text-danger" })
                    </div>
                </div>
                }


                else
                {
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.DataEntryText, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        @*@Model_Custom.FieldLabelCaption (Custom)*@
                        <div class="control-label col-md-2">
                            @Model_Custom.FieldLabelCaption
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CurrentRecipValue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CurrentRecipValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }

            else
            {
                @*//
                    // For standard fields.
                    //*@
                <div class="form-group">
                    @*@Html.LabelFor(model => model.DataEntryText, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @*@Model.FieldLabelCaption*@
                    @*@Html.LabelFor(model => model.FieldLabelCaption, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="control-label col-md-2">
                        @Model.FieldLabelCaption
                    </div>
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.DataEntryText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataEntryText, "", new { @class = "text-danger" })*@
                        @Html.EditorFor(model => model.CurrentRecipValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentRecipValue, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        @*<div class="form-group">
                @Html.LabelFor(model => model.ExampleValue, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExampleValue, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExampleValue, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HasPresetValues, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasPresetValues)
                        @Html.ValidationMessageFor(model => model.HasPresetValues, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsAdditionalField, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsAdditionalField)
                        @Html.ValidationMessageFor(model => model.IsAdditionalField, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@


        @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>*@

        @*<div>
            @Html.ActionLink("Back to List", "Index")
        *@
    </div>

}



