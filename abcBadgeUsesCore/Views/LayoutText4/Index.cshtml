@model ciLayoutPrintLib.CILayoutBadge

@{
    ViewBag.Title = "Badge Layout Designer";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .blue_box {
        text-align: center;
        position: absolute;
        padding: 10px;
        cursor: move;
        z-index: 0;
        background-color: #2196F3;
        color: #fff;
        border: 1px solid #d3d3d3;
        height: 30px;
        width: 350px;
    }

    .class_border {
        border-width: 2px;
        border-color: lightgray;
        border-style: solid;
    }

    .button_immobile {
        text-align: center;
        position: absolute;
        left: 400px;
        padding: 10px;
        z-index: 9;
        background-color: #513613;
        color: #fff;
        border: 1px solid #d3d3d3;
    }

    #id__mydivheader1 {
        left: 142px;
        top: 429px;
        height: 30px;
        width: 350px;
        align-content: center;
        font-size: 20px;
    }

    #id__mydivheader2 {
        left: 162px;
        top: 449px;
        height: 30px;
        width: 350px;
        align-content: center;
        font-size: 20px;
    }
</style>

<div id="id__mydivheaderT1" class="blue_box">Text Field #1 - Click and drag!</div>
<div id="id__mydivheaderT2" class="blue_box">Text Field #2 - Click and drag!</div>
<div id="id__mydivheaderT3" class="blue_box">Text Field #3 - Click and drag!</div>
<div id="id__mydivheaderT4" class="blue_box">ClickanText Field #4 </div>

@*script src="TextMover_T2.js"></script>*@

<h2>Badge Design</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CILayoutBadgeId)

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>

    <div id="badge_back" class="div_back" name="badge-back">
        @*<img src="~/Images/LayoutBack1of3.jpg" id="image_back" class="class_border" width="644" height="400" />*@
        <img src="~/ASPX/Step4Handler.ashx?id=back&big=y&hor=y&width=860" id="image_back" class="class_border" width="860" />
        <img src="~/Images/Adjust_width_height.jpg" width="600" />
    </div>

    <div class="form-horizontal">
        <h4>CILayoutBadge</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h1>Text Label # T1</h1>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.FieldName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.FieldName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.TopEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.TopEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.TopEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.T1.LeftEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.LeftEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.LeftEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.WidthLengthPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.WidthLengthPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.WidthLengthPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.HeightPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.HeightPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.HeightPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.FontSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.FontSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.FontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.FontFamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.FontFamilyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.FontFamilyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T1.BackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T1.BackgroundColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T1.BackgroundColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <h1>Text Label # T2</h1>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.FieldName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.FieldName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.TopEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.TopEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.TopEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.T2.LeftEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.LeftEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.LeftEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.WidthLengthPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.WidthLengthPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.WidthLengthPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.HeightPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.HeightPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.HeightPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.FontSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.FontSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.FontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.FontFamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.FontFamilyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.FontFamilyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T2.BackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T2.BackgroundColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T2.BackgroundColor, "", new { @class = "text-danger" })
            </div>
        </div>




        <h1>Text Label # T3</h1>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.FieldName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.FieldName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.TopEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.TopEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.TopEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.T3.LeftEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.LeftEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.LeftEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.WidthLengthPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.WidthLengthPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.WidthLengthPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.HeightPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.HeightPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.HeightPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.FontSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.FontSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.FontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.FontFamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.FontFamilyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.FontFamilyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T3.BackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T3.BackgroundColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T3.BackgroundColor, "", new { @class = "text-danger" })
            </div>
        </div>





        <h1>Text Label # T4</h1>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.FieldName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.FieldName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.TopEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.TopEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.TopEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.T4.LeftEdgePositionPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.LeftEdgePositionPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.LeftEdgePositionPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.WidthLengthPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.WidthLengthPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.WidthLengthPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.HeightPixels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.HeightPixels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.HeightPixels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.FontSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.FontSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.FontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.FontFamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.FontFamilyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.FontFamilyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.T4.BackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.T4.BackgroundColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.T4.BackgroundColor, "", new { @class = "text-danger" })
            </div>
        </div>







        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}

@section Scripts
{
    @*<script src="@Url.Content("~/Scripts/TextMover1.js")"></script>*@
    @*<script src="@Url.Content("~/Scripts/TextMover_T1.js")"></script>*@

    <script src="@Url.Content("~/Scripts/Elements_T1.js")"></script>
    <script src="@Url.Content("~/Scripts/Elements_T2.js")"></script>

    <script src="@Url.Content("~/Scripts/Elements_T3.js")"></script>
    <script src="@Url.Content("~/Scripts/Elements_T4.js")"></script>

    <script src="@Url.Content("~/Scripts/Elements_T1b.js")"></script>
    <script src="@Url.Content("~/Scripts/Elements_T2b.js")"></script>

    <script src="@Url.Content("~/Scripts/Elements_T3b.js")"></script>
    <script src="@Url.Content("~/Scripts/Elements_T4b.js")"></script>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


